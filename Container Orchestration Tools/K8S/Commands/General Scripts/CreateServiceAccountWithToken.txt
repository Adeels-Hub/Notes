# Delete the Existing Service Account and Secret
kubectl delete serviceaccount my-service-account
kubectl delete secret my-service-account-token

# Recreate the Service Account
kubectl create serviceaccount my-service-account

# Check for the Automatically Created Secret
$serviceAccount = kubectl get serviceaccount my-service-account -o json | ConvertFrom-Json
$secretName = if ($serviceAccount.secrets.Count -gt 0) { $serviceAccount.secrets[0].name } else { $null }

if (-not $secretName) {
    # Manually Create the Secret
    $tokenBytes = [byte[]] (1..32 | ForEach-Object { [byte](Get-Random -Min 0 -Max 256) })
    $token = [Convert]::ToBase64String($tokenBytes)
    kubectl create secret generic my-service-account-token --type=kubernetes.io/service-account-token --from-literal=token=$token --dry-run=client -o yaml |
        kubectl annotate --local -f - "kubernetes.io/service-account.name=my-service-account" -o yaml |
        kubectl apply -f -

    # Patch the Service Account to Use the Secret
    kubectl patch serviceaccount my-service-account -p '{"secrets": [{"name": "my-service-account-token"}]}'

    # Verify the Secret is Associated with the Service Account
    kubectl describe serviceaccount my-service-account

    # Describe the Secret
    kubectl describe secret my-service-account-token
} else {
    Write-Output "Secret automatically created: $secretName"
}
